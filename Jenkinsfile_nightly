#!groovy

properties([
  pipelineTriggers([cron('0 5 * * *')]),
  parameters([
    string(name: 'URL_TO_TEST', defaultValue: 'http://prl-cos-aat.service.core-compute-aat.internal/', description: 'The URL you want to run these tests against')
  ])
])

@Library("Infrastructure")

def type = "java"
def product = "prl"
def component = "cos"

def channel = '#prl-tech-notifications'

def secrets = [
  'prl-${env}':[
    secret('prl-cos-idam-client-secret', 'IDAM_CLIENT_SECRET'),
    secret('system-update-user-username', 'SYSTEM_UPDATE_USER_USERNAME'),
    secret('system-update-user-password', 'PRL_SYSTEM_UPDATE_PASSWORD'),
    secret('microservicekey-prl-cos-api', 'IDAM_S2S_AUTH_TOTP_SECRET')
  ]
]

static LinkedHashMap<String, Object> secret(String secretName, String envVar) {
  [$class     : 'AzureKeyVaultSecret',
   secretType : 'Secret',
   name       : secretName,
   version    : '',
   envVariable: envVar
  ]
}

withNightlyPipeline(type, product, component) {
  env.TEST_URL = params.URL_TO_TEST
  env.test_environment = 'aat'

  loadVaultSecrets(secrets)
  enableSlackNotifications(channel)
//  enableFortifyScan()
  enableFullFunctionalTest(200)


  after('fullFunctionalTest') {
    steps.archiveArtifacts allowEmptyArchive: true, artifacts: '**/site/serenity/**/*'
  }

  after('fortify-scan') {
    steps.archiveArtifacts allowEmptyArchive: true, artifacts: '**/Fortify Scan/**/*'
  }
}
